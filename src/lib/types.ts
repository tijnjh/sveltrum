import { Schema as s } from 'effect'

// export const track = type({
//   '+': 'reject',
//   'artwork_url': 'string.url | null',
//   'caption': 'string | null',
//   'commentable': 'boolean',
//   'comment_count': 'number | null',
//   'created_at': 'string.date',
//   'description': 'string | null',
//   'downloadable': 'boolean',
//   'download_count': 'number | null',
//   'duration': 'number',
//   'full_duration': 'number',
//   'embeddable_by': '"all" | "none" | "me"',
//   'genre': 'string | null',
//   'has_downloads_left': 'boolean',
//   'id': 'number',
//   'kind': '"track"',
//   'label_name': 'null | string',
//   'last_modified': 'string.date',
//   'license': 'string',
//   'likes_count': 'number | null',
//   'permalink': 'string',
//   'permalink_url': 'string.url',
//   'playback_count': 'number | null',
//   'public': 'boolean',
//   'publisher_metadata': type.null.or({
//     id: 'number',
//     urn: 'string',
//   }),
//   'purchase_title': 'string | null',
//   'purchase_url': 'string.url | null',
//   'release_date': 'string | null',
//   'reposts_count': 'number',
//   'secret_token': 'null|string',
//   'sharing': '"public" | "private"',
//   'state': '"finished" | "processing"',
//   'streamable': 'boolean',
//   'tag_list': 'string',
//   'title': 'string',
//   'uri': 'string.url',
//   'urn': 'string',
//   'user_id': 'number',
//   'visuals': type.null.or({
//     urn: 'string',
//     enabled: 'boolean',
//   }),
//   'waveform_url': 'string.url',
//   'display_date': 'string.date',
//   'media': {
//     transcodings: type({
//       url: 'string.url',
//       preset: '"opus_0_0" | "aac_160k" | "mp3_0_0" | "abr_sq" | "mp3_1_0" | "mp3_0_1" | "mp3_standard"',
//       duration: 'number',
//       snipped: 'boolean',
//       format: {
//         protocol: '"hls" | "progressive" | "ctr-encrypted-hls" | "cbc-encrypted-hls"',
//         mime_type:
//           `'audio/mp4; codecs="mp4a.40.2"'
//           |'audio/mpegurl'
//           |'audio/mpeg'
//           |'audio/ogg; codecs="opus"'`,
//       },
//       quality: '"sq"',
//       is_legacy_transcoding: 'boolean',
//     }).array(),
//   },
//   'station_urn': 'string',
//   'station_permalink': 'string',
//   'track_authorization': 'string',
//   'monetization_model': '"AD_SUPPORTED" | "BLACKBOX" | "NOT_APPLICABLE" | "SUB_HIGH_TIER"',
//   'policy': '"MONETIZE" | "BLOCK" | "SNIP" | "ALLOW"',
//   'user': {
//     'avatar_url': 'string.url',
//     'city': 'string | null',
//     'comments_count?': 'number',
//     'country_code': 'string | null',
//     'created_at?': 'string.date',
//     'creator_subscriptions?': [
//       {
//         product: {
//           id: 'string',
//         },
//       },
//     ],
//     'creator_subscription?': {
//       product: {
//         id: 'string',
//       },
//     },
//     'description?': 'string | null',
//     'followers_count': 'number',
//     'followings_count?': 'number',
//     'first_name': 'string',
//     'full_name': 'string',
//     'groups_count?': 'number',
//     'id': 'number',
//     'kind': '"user"',
//     'last_modified': 'string.date',
//     'last_name': 'string',
//     'likes_count?': 'number',
//     'playlist_likes_count?': 'number',
//     'permalink': 'string',
//     'permalink_url': 'string.url',
//     'playlist_count?': 'number',
//     'reposts_count?': 'number | null',
//     'track_count?': 'number',
//     'uri': 'string.url',
//     'urn': 'string',
//     'username': 'string',
//     'verified': 'boolean',
//     'visuals?': type.null.or({
//       urn: 'string',
//       enabled: 'boolean',
//       visuals: [
//         {
//           urn: 'string',
//           entry_time: 'number',
//           visual_url: 'string.url',
//         },
//       ],
//       tracking: 'null',
//     }),
//     'badges': {
//       pro: 'boolean',
//       creator_mid_tier: 'boolean',
//       pro_unlimited: 'boolean',
//       verified: 'boolean',
//     },
//     'station_urn': 'string',
//     'station_permalink': 'string',
//     'date_of_birth?': 'string | null',
//   },
// })

// export type Track = typeof track.infer

export const track = s.Struct({
  artwork_url: s.NullOr(s.String),
  caption: s.NullOr(s.String),
  commentable: s.Boolean,
  comment_count: s.NullOr(s.Number),
  created_at: s.Date,
  description: s.NullOr(s.String),
  downloadable: s.Boolean,
  download_count: s.NullOr(s.Number),
  duration: s.Number,
  full_duration: s.Number,
  embeddable_by: s.Union(s.Literal('all'), s.Literal('none'), s.Literal('me')),
  genre: s.NullOr(s.String),
  has_downloads_left: s.Boolean,
  id: s.Number,
  kind: s.Literal('track'),
  label_name: s.NullOr(s.String),
  last_modified: s.Date,
  license: s.String,
  likes_count: s.NullOr(s.Number),
  permalink: s.String,
  permalink_url: s.URL,
  playback_count: s.NullOr(s.Number),
  public: s.Boolean,
  publisher_metadata: s.NullOr(s.Struct({
    id: s.Number,
    urn: s.String,
  })),
  purchase_title: s.NullOr(s.String),
  purchase_url: s.NullOr(s.URL),
  release_date: s.NullOr(s.String),
  reposts_count: s.Number,
  secret_token: s.NullOr(s.String),
  sharing: s.Union(s.Literal('public'), s.Literal('private')),
  state: s.Union(s.Literal('finished'), s.Literal('processing')),
  streamable: s.Boolean,
  tag_list: s.String,
  title: s.String,
  uri: s.URL,
  urn: s.String,
  user_id: s.Number,
  visuals: s.NullOr(s.Struct({
    urn: s.String,
    enabled: s.Boolean,
  })),
  waveform_url: s.URL,
  display_date: s.Date,
  media: s.Struct({
    transcodings: s.Array(s.Struct({
      url: s.URL,
      preset: s.Union(s.Literal('opus_0_0'), s.Literal('aac_160k'), s.Literal('mp3_0_0'), s.Literal('abr_sq'), s.Literal('mp3_1_0'), s.Literal('mp3_0_1'), s.Literal('mp3_standard')),
      duration: s.Number,
      snippet: s.Boolean,
      format: s.Struct({
        protocol: s.Union(s.Literal('hls'), s.Literal('progressive'), s.Literal('ctr-encrypted-hls'), s.Literal('cbc-encrypted-hls')),
        mime_type: s.Union(s.Literal('audio/mp4; codecs="mp4a.40.2"'), s.Literal('audio/mpegurl'), s.Literal('audio/mpeg'), s.Literal('audio/ogg; codecs="opus"')),
      }),
      quality: s.Literal('sq'),
      is_legacy_transcoding: s.Boolean,
    })),
  }),
  station_urn: s.String,
  station_permalink: s.String,
  track_authorization: s.String,
  monetization_model: s.Union(s.Literal('AD_SUPPORTED'), s.Literal('BLACKBOX'), s.Literal('NOT_APPLICABLE'), s.Literal('SUB_HIGH_TIER')),
  policy: s.Union(s.Literal('MONETIZE'), s.Literal('BLOCK'), s.Literal('SNIP'), s.Literal('ALLOW')),
  user: s.Struct({
    avatar_url: s.URL,
    city: s.NullOr(s.String),
    comments_count: s.UndefinedOr(s.Number),
    country_code: s.NullOr(s.String),
    created_at: s.UndefinedOr(s.Date),
    creator_subscriptions: s.UndefinedOr(s.Array(s.Struct({
      product: s.Struct({
        id: s.String,
      }),
    }))),
    creator_subscription: s.UndefinedOr(s.Struct({
      product: s.Struct({
        id: s.String,
      }),
    })),
    description: s.NullishOr(s.String),
    followers_count: s.Number,
    followings_count: s.UndefinedOr(s.Number),
    first_name: s.String,
    full_name: s.String,
    groups_count: s.UndefinedOr(s.Number),
    id: s.Number,
    kind: s.Literal('user'),
    last_modified: s.Date,
    last_name: s.String,
    likes_count: s.UndefinedOr(s.String),
    playlist_likes_count: s.UndefinedOr(s.Number),
    permalink: s.String,
    //     'permalink_url': 'string.url',
    //     'playlist_count?': 'number',
    //     'reposts_count?': 'number | null',
    //     'track_count?': 'number',
    //     'uri': 'string.url',
    //     'urn': 'string',
    //     'username': 'string',
    //     'verified': 'boolean',
    //     'visuals?': type.null.or({
    //       urn: 'string',
    //       enabled: 'boolean',
    //       visuals: [
    //         {
    //           urn: 'string',
    //           entry_time: 'number',
    //           visual_url: 'string.url',
    //         },
    //       ],
    //       tracking: 'null',
    //     }),
    //     'badges': {
    //       pro: 'boolean',
    //       creator_mid_tier: 'boolean',
    //       pro_unlimited: 'boolean',
    //       verified: 'boolean',
    //     },
    //     'station_urn': 'string',
    //     'station_permalink': 'string',
    //     'date_of_birth?': 'string | null',
    //   },
  }),
})

export type Track = s.Schema.Type<typeof track>
